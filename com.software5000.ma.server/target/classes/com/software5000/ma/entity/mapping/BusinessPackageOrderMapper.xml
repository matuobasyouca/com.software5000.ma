<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- 基础封装数据库操作类，通过映射直接处理相应对象的简单读写操作 -->
<mapper namespace="BusinessPackageOrder">

    <resultMap id="BusinessPackageOrderResult" type="BusinessPackageOrder">
        <id property="id" column="id"/>
        <result property="orderNumber" column="orderNumber"/>
        <result property="createTime" column="createTime"/>
        <result property="updateTime" column="updateTime"/>
        <result property="totalAmount" column="totalAmount"/>
        <result property="state" column="state"/>
        <result property="payType" column="payType"/>
        <result property="quantity" column="quantity"/>
        <result property="userId" column="userId"/>
        <result property="businessId" column="businessId"/>
        <result property="businessPackageId" column="businessPackageId"/>
        <result property="recordId" column="recordId"/>
        <association property="user" javaType="User">
            <result property="realName" column="realName"/>
            <result property="mobile" column="mobile"/>
            <collection  property="cars" ofType="Car">
                <result property="carNumber" column="carNumber"/>
            </collection>
        </association>
        <association property="businessPackage" javaType="BusinessPackage">
            <result property="packageName" column="packageName"/>
            <result property="validTerm" column="validTerm"/>
            <result property="originalPrice" column="originalPrice"/>
            <result property="salePrice" column="salePrice"/>
            <collection  property="packageAndItems" ofType="PackageAndItem">
                <result property="id" column="packageAndItemId" />
                <result property="useTimes" column="useTimes"/>
                <association property="serviceItem" javaType="ServiceItem">
                    <result property="itemName" column="itemName"/>
                </association>
            </collection>
        </association>
    </resultMap>

    <!-- 根据商家ID查询待支付订单 -->
    <select id="selectPayPackageOrderByState" parameterType="java.util.HashMap" resultType="PayPackageOrderDto">
        SELECT DISTINCT o.id, u.realName, u.mobile, ml.lvlName, bp.packageName, bp.salePrice,o.userId,bp.id AS packageId,
        bu.realName as saleName,o.payType as payType,o.orderNumber,o.createTime,o.updateTime
        FROM BusinessPackageOrder o
        LEFT JOIN  User u ON u.id=o.userId
        <if test="keyWord != null and keyWord!=''">
        LEFT JOIN Car c ON u.id = c.userId
        </if>
        LEFT JOIN MemberLvlRecord mlr ON mlr.userId=u.id
        LEFT JOIN MemberLvl ml ON ml.id=mlr.memberLvlId
        LEFT JOIN BusinessPackage bp ON bp.id=o.businessPackageId
        LEFT JOIN BusinessUser bu on o.businessUserId=bu.id
        WHERE 1=1
        <if test="state != null and state!=''">
            AND  o.state= #{state}
        </if>
        <if test="beginTime != null and beginTime!=''">
            AND o.updateTime>CONCAT(#{beginTime},' 00:00:00')
        </if>
        <if test="endTime != null and endTime!=''">
            AND o.updateTime&lt;CONCAT(#{endTime},' 23:59:59')
        </if>
        <if test="keyWord != null and keyWord!=''">
            and (c.carNumber like upper(CONCAT('%',#{keyWord},'%' )) or u.mobile like upper(CONCAT('%',#{keyWord},'%' )) or u.realName like upper(CONCAT('%',#{keyWord},'%' )))
        </if>
        ORDER BY o.updateTime DESC
    </select>

    <!-- 根据商家ID查询各类型订单数 -->
    <select id="selectCountByState" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT o.state as state,count(*) as count
        FROM BusinessPackageOrder o
        WHERE 1=1 and o.state in (1,2)
        <if test="state != null and state!=''">
            AND  o.state= #{state}
        </if>
        GROUP  by o.state
    </select>

    <!-- 查询商家未支付套餐数量 -->
    <select id="selectNoPaidPackageOrderCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
      SELECT  count(id) from BusinessPackageOrder where businessId=#{businessId} and state=1
    </select>

    <select id="selectBusinessPackageOrderById" parameterType="java.util.HashMap" resultMap="BusinessPackageOrderResult">
        SELECT bpo.id as id,bpo.orderNumber as orderNumber,bpo.createTime as createTime,bpo.updateTime as updateTime,bpo.totalAmount as totalAmount,bpo.businessPackageId,
        bp.packageName as packageName,bp.validTerm as validTerm,bp.salePrice as salePrice,bp.originalPrice as originalPrice,u.realName as realName,u.mobile as mobile,
        bpo.userId as userId,bpo.businessId as businessId,
        c.carNumber as carNumber,pai.useTimes as useTimes,si.itemName,bpo.state as state,bpo.payType as payType,pai.id as packageAndItemId,bpo.quantity,mlr.id as recordId
        from BusinessPackageOrder bpo
        LEFT  JOIN BusinessPackage bp on bpo.businessPackageId=bp.id
        LEFT  JOIN PackageAndItem pai on bp.id=pai.businessPackageId
        LEFT  JOIN ServiceItem si on pai.serviceItemId=si.id
        LEFT  JOIN User u on bpo.userId=u.id
        LEFT  JOIN Car c on c.userId=u.id and c.carState=1
        LEFT  JOIN MemberLvlRecord mlr ON mlr.userId=u.id and mlr.businessId=bpo.businessId
        where bpo.id=#{id}
    </select>

    <select id="selectInitialByOpenId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select bo.createTime as time,concat(b.businessName,',套餐卡:',us.mobile,',',bp.packageName) as comment
        from BusinessPackageOrder bo INNER JOIN BusinessPackage bp
        on bo.businessPackageId=bp.id
        INNER join Business b on bp.businessId=b.id
        INNER JOIN User us on bo.userId=us.id
        where us.wxOpenId=#{wxOpenId}
        ORDER BY bo.id asc LIMIT 1
    </select>

    <update id="updatePackageOrderByDate" parameterType="java.util.HashMap">
        UPDATE BusinessPackageOrder SET state=#{newState}
        WHERE 1=1
        <if test="state != null and state!=''">
            AND state=#{state}
        </if>
        <if test="date != null and date!=''">
            AND createTime &lt;#{date}
        </if>
        <if test="userId != null and userId gt 0">
            AND userId=#{userId};
        </if>
    </update>

</mapper>