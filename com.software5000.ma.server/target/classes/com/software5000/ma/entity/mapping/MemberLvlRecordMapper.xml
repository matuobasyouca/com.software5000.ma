<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- 基础封装数据库操作类，通过映射直接处理相应对象的简单读写操作 -->
<mapper namespace="MemberLvlRecord">
    <resultMap id="memberLvlRecordBybusinessIdResult" type="MemberLvlRecordInfo">
    <id property="id" column="id"/>
    <result property="totalConsume" column="totalConsume"/>
    <result property="memberLvlId" column="memberLvlId"/>
    <result property="userId" column="userId"/>
    <result property="createTime" column="createTime"/>
    <result property="totalTimes" column="totalTimes"/>
    <association property="memberLvl" javaType="MemberLvl">
        <result property="discount" column="discount"/>
        <result property="lvlName" column="lvlName"/>
        <result property="totalConsume" column="mltotalConsume"/>
        <result property="id" column="mlid"/>
    </association>
    <association property="user" javaType="User">
        <result property="id" column="uid"/>
        <result property="mobile" column="mobile"/>
        <result property="realName" column="realName"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="area" column="area"/>
        <result property="wxOpenId" column="wxOpenId"/>
    </association>
        <collection property="cars" ofType="Car">
            <result property="id" column="cid"/>
            <result property="carNumber" column="carNumber"/>
            <result property="frameNumber" column="frameNumber"/>
        </collection>
    </resultMap>

    <!--因为车辆导致分页异常，先查询出会员记录ID-->
    <select id="selectPageMemberLvlRecordIdByParam" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT DISTINCT mlr.id
        FROM MemberLvlRecord mlr
        LEFT JOIN Business b ON b.id=mlr.businessId
        LEFT JOIN User u ON mlr.userId = u.id
        LEFT JOIN MemberLvl ml ON mlr.memberLvlId=ml.id
        LEFT JOIN Car c ON u.id=c.userId
        WHERE 1=1
        <if test="searchInfo != null and searchInfo != ''">
            AND (c.carNumber like CONCAT('%',#{searchInfo},'%' ) OR u.mobile like CONCAT('%',#{searchInfo},'%' ) OR u.realName like CONCAT('%',#{searchInfo},'%' ))
        </if>
        AND c.carState=1
    </select>

    <!--根据id，查询会员资料-->
    <select id="selectPageMemberLvlRecordByParam" parameterType="java.util.HashMap"
            resultMap="memberLvlRecordBybusinessIdResult">
        SELECT mlr.id,mlr.totalConsume,mlr.memberLvlId,mlr.userId,mlr.createTime,mlr.totalTimes,
        u.id AS uid,u.realName,u.sex,u.mobile,u.area,u.birthday,u.wxOpenId,
        ml.discount,ml.lvlName,ml.totalConsume AS mltotalConsume,ml.id AS mlid,
        c.id AS cid,c.carNumber,c.frameNumber
        FROM MemberLvlRecord mlr
        LEFT JOIN Business b ON b.id=mlr.businessId
        LEFT JOIN User u ON mlr.userId = u.id
        LEFT JOIN MemberLvl ml ON mlr.memberLvlId=ml.id
        LEFT JOIN Car c ON u.id=c.userId
        WHERE 1=1
        <if test="ids != null and ids != ''">
            AND mlr.id in (${ids})
        </if>
        AND c.carState=1
        ORDER BY mlr.createTime DESC
    </select>


    <!--根据会员等级记录的id，查询用户信息、车辆及会员等级-->
    <select id="selectMemberLvlRecordByParam" resultType="MemberLvlRecord" parameterType="java.util.Map">
        SELECT mlr.*,u.realName "user.realName",u.mobile "user.mobile",ml.lvlName "memberLvl.lvlName",u.wxOpenId "user.wxOpenId",u.id "user.id",
       mlr.remarks, mlr.memberBalance,ml.id "memberLvl.id"
        FROM MemberLvlRecord mlr
        LEFT JOIN User u ON mlr.userId=u.id
        LEFT JOIN MemberLvl ml ON mlr.memberLvlId=ml.id
        WHERE mlr.id=#{memberLvlRecordId}
    </select>

    <resultMap id="memberLvlRecordResult" type="MemberLvlRecord">
        <id property="id" column="id"/>
        <result property="totalConsume" column="totalConsume"/>
        <result property="totalTimes" column="totalTimes"/>
        <result property="memberLvlId" column="memberLvlId"/>
        <result property="createTime" column="createTime"/>
        <result property="memberBalance" column="memberBalance"/>
        <result property="remarks" column="remarks"/>
        <association property="memberLvl" javaType="MemberLvl">
            <result property="discount" column="discount"/>
            <result property="lvlName" column="lvlName"/>
            <result property="totalConsume" column="mltotalConsume"/>
            <result property="id" column="mlid"/>
        </association>
    </resultMap>

    <!--根据用户id查询出用户会员记录MemberLvlRecord及关联的MemberLvl-->
    <select id="selectMemberLvlRecordAndMemberLvlByUserId" parameterType="java.util.HashMap"
            resultMap="memberLvlRecordResult">
        SELECT mlr.id,mlr.totalConsume,mlr.memberLvlId,mlr.createTime,
        ml.discount,ml.lvlName,ml.id AS mlid, mlr.totalTimes, mlr.memberBalance,mlr.remarks
        FROM MemberLvlRecord mlr
        LEFT JOIN MemberLvl ml ON mlr.memberLvlId=ml.id
        WHERE 1=1
        <if test="userId != null and userId gt 0">
            AND mlr.userId =#{userId}
        </if>
        <if test="businessId != null and businessId gt 0">
            AND mlr.businessId =#{businessId}
        </if>
    </select>

    <!--查询商家的会员数量-->
    <select id="selectUserCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT
	COUNT( DISTINCT mlr.userId)
FROM
	MemberLvlRecord mlr
LEFT JOIN Car c ON mlr.userId = c.userId
        where mlr.businessId =#{businessId}
        and c.carState = 1
    </select>


    <delete id="deleteMemberLvlRecords" parameterType="java.util.HashMap">
        delete from MemberLvlRecord where id in (${ids})
    </delete>

    <update id="updateMemberLvlRecordChangeUserId" parameterType="java.util.HashMap">
        update MemberLvlRecord set userId=#{userId} where businessId not in (${businessIds}) and userId in (${ids})
    </update>

    <select id="selectMemberLvlRecordBusiness" parameterType="java.util.HashMap" resultType="java.lang.String">
        select GROUP_CONCAT(m.businessId) from MemberLvlRecord m where m.userId=#{userId}
    </select>

    <select id="selectMemberLvlRecord" parameterType="java.util.HashMap" resultType="MemberLvlRecord">
        select m.id from MemberLvlRecord m LEFT JOIN User u on m.userId=u.id where u.id is NULL
    </select>

</mapper>